<Page
    x:Class="Countdown.Views.NumbersView"
    NavigationCacheMode="Enabled"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Countdown.Views"
    xmlns:vm="using:Countdown.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:w3c="using:AssyntSoftware.WinUI3Controls"
    mc:Ignorable="d"
    Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

    <Page.Resources>

        <Style x:Key="ctbs" TargetType="local:CountdownTextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
            <Setter Property="ContentStyle" Value="Number" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="MaxLength" Value="3" />
            <Setter Property="MinWidth" Value="40" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
        </Style>

    </Page.Resources>

    <RelativePanel>
        <Grid x:Name="InputGrid"  RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource InputGridWidth}"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <local:Clock Grid.Column="0" Grid.Row="0" Width="200" Height="200" Ticks="{x:Bind ViewModel.StopwatchController.Ticks, Mode=OneWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

            <w3c:GroupBox Grid.Column="0" Grid.Row="1" Heading="Tiles">
              <StackPanel Orientation="Horizontal">
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Tile_5, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                </StackPanel>
            </w3c:GroupBox>

            <w3c:GroupBox Grid.Column="0" Grid.Row="2" Heading="Target">
                <local:CountdownTextBox Style="{StaticResource ctbs}" Width="40" Text="{x:Bind ViewModel.Target, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </w3c:GroupBox>

            <Grid Grid.Column="0" Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <SplitButton Grid.Column="0" x:Name="ChooseNumbersOption" Content="Choose" Command="{x:Bind ViewModel.ChooseNumbersCommand}">
                    <SplitButton.Flyout>
                        <MenuFlyout Placement="Bottom">
                            <RadioMenuFlyoutItem Text="6 small tiles" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(0), Mode=OneTime}" CommandParameter="0" Command="{x:Bind ViewModel.ChooseOptionCommand}"/>
                            <RadioMenuFlyoutItem Text="1 large and 5 small tiles" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(1), Mode=OneTime}" CommandParameter="1" Command="{x:Bind ViewModel.ChooseOptionCommand}"/>
                            <RadioMenuFlyoutItem Text="2 large and 4 small tiles" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(2), Mode=OneTime}" CommandParameter="2" Command="{x:Bind ViewModel.ChooseOptionCommand}"/>
                            <RadioMenuFlyoutItem Text="3 large and 3 small tiles" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(3), Mode=OneTime}" CommandParameter="3" Command="{x:Bind ViewModel.ChooseOptionCommand}"/>
                            <RadioMenuFlyoutItem Text="4 large and 2 small tiles" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(4), Mode=OneTime}" CommandParameter="4" Command="{x:Bind ViewModel.ChooseOptionCommand}"/>
                        </MenuFlyout>
                    </SplitButton.Flyout>
                </SplitButton>

                <Button Grid.Column="1" HorizontalAlignment="Center" Content="{x:Bind ViewModel.StopwatchController.CommandText, Mode=OneWay}" Command="{x:Bind ViewModel.StopwatchController.TimerCommand}" Style="{StaticResource StartStopButtonStyle}"/>
                <Button Grid.Column="2" Content="Solve" Command="{x:Bind ViewModel.SolveCommand}"/>
            </Grid>
        </Grid>

        <ListView x:Name="EquationList" RelativePanel.RightOf="InputGrid" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignRightWithPanel="True" ItemsSource="{x:Bind ViewModel.EquationList, Mode=OneWay}" >
            <ListView.Resources>
                <StandardUICommand x:Name="CopyCommand" Kind="Copy" ExecuteRequested="CopyCommand_ExecuteRequested" CanExecuteRequested="CopyCommand_CanExecuteRequested"/>
            </ListView.Resources>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:EquationItem">
                    <TextBlock Text="{x:Bind Content}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ContextFlyout>
                <MenuFlyout >
                    <MenuFlyoutItem Command="{StaticResource CopyCommand}"/>
                </MenuFlyout>
            </ListView.ContextFlyout>
        </ListView>
    </RelativePanel>
</Page>
