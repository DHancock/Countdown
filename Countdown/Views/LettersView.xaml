<Page
    x:Class="Countdown.Views.LettersView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Countdown.Views"
    xmlns:vm="using:Countdown.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:w3c="using:AssyntSoftware.WinUI3Controls"
    mc:Ignorable="d">

    <Page.Resources>
        <Style x:Name="ctbs" TargetType="local:CountdownTextBox">
            <Setter Property="ContentStyle" Value="Letter"/>
            <Setter Property="AutoTabStyle" Value="AlwaysTab"/>
        </Style>

        <CollectionViewSource x:Name="WordListGrouping" Source="{x:Bind ViewModel.WordList, Mode=OneWay}" IsSourceGrouped="true"/>
    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="{StaticResource InputGridWidth}"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <StackPanel Grid.Column="0">

            <local:Clock Style="{ThemeResource ClockStyle}" State="{x:Bind ViewModel.StopwatchController.State, Mode=TwoWay}" VerticalAlignment="Center" HorizontalAlignment="Center"/>

            <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" BorderBrush="LightGray" BorderThickness="1" CornerRadius="4" Padding="15" Margin="10">
                <Grid RowDefinitions="*,*,*" ColumnDefinitions="*,*,*,*,*,*,*,*,*">
                    <TextBlock Text="Tiles" Grid.ColumnSpan="9"/>

                    <local:CountdownTextBox Grid.Row="1" Grid.Column="0" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_0, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[0], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[1], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="2" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[2], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="3" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_3, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[3], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="4" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_4, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[4], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="5" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_5, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[5], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="6" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_6, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[6], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="7" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_7, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[7], Mode=OneWay}"/>
                    <local:CountdownTextBox Grid.Row="1" Grid.Column="8" Style="{StaticResource ctbs}" Text="{x:Bind ViewModel.Letter_8, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ErrorToolTipText="{x:Bind ViewModel.ErrorText[8], Mode=OneWay}" AutoTabStyle="Off"/>


                    <Grid Margin="5,10" Grid.Row="2" Grid.ColumnSpan="9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Content="Vowel" Command="{x:Bind ViewModel.PickVowelCommand}"/>
                        <Button Grid.Column="1" Content="Consonant" Command="{x:Bind ViewModel.PickConsonantCommand}" HorizontalAlignment="Center"/>
                        <Button Grid.Column="2" x:Name="ClearButton" Command="{x:Bind ViewModel.ClearCommand}" Padding="0" Height="32" Width="32">
                            <Path Data="M0,0 L10,10 M0,10 L10,0" Stretch="None" VerticalAlignment="Center" HorizontalAlignment="Center" Stroke="{ThemeResource ButtonForeground}" StrokeThickness="1.5" Width="10" Height="10" Opacity="{x:Bind ViewModel.ClearButtonPathOpacity, Mode=OneWay}"/>
                        </Button>
                    </Grid>
                </Grid>
            </Border>

            <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" BorderBrush="LightGray" BorderThickness="1" CornerRadius="4" Padding="15" Margin="10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <SplitButton x:Name="ChooseNumbersOption" Content="Choose" Command="{x:Bind ViewModel.ChooseLettersCommand}">
                        <SplitButton.Flyout>
                            <MenuFlyout Placement="Bottom">
                                <RadioMenuFlyoutItem Text="3 vowels and 6 consonants" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(0), Mode=OneTime}" CommandParameter="0" Command="{x:Bind ViewModel.ChooseOptionCommand}" AccessKey="3"/>
                                <RadioMenuFlyoutItem Text="4 vowels and 5 consonants" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(1), Mode=OneTime}" CommandParameter="1" Command="{x:Bind ViewModel.ChooseOptionCommand}" AccessKey="4"/>
                                <RadioMenuFlyoutItem Text="5 vowels and 4 consonants" IsChecked="{x:Bind ViewModel.IsTileOptionChecked(2), Mode=OneTime}" CommandParameter="2" Command="{x:Bind ViewModel.ChooseOptionCommand}" AccessKey="5"/>
                            </MenuFlyout>
                        </SplitButton.Flyout>
                    </SplitButton>

                    <Button Grid.Column="1" HorizontalAlignment="Center" Content="{x:Bind ViewModel.StopwatchController.CommandText, Mode=OneWay}" Command="{x:Bind ViewModel.StopwatchController.TimerCommand}" Style="{StaticResource StartStopButtonStyle}"/>
                    <Button Grid.Column="2" Content="Solve" Command="{x:Bind ViewModel.SolveCommand}"/>
                </Grid>
            </Border>
        </StackPanel>

        <ListView x:Name="WordList" Grid.Column="1" ItemsSource="{x:Bind WordListGrouping.View, Mode=OneWay}">
            <ListView.Resources>
                <StandardUICommand x:Name="CopyCommand" Kind="Copy" ExecuteRequested="CopyCommand_ExecuteRequested" CanExecuteRequested="CopyCommand_CanExecuteRequested"/>
            </ListView.Resources>
            <ListView.GroupStyle>
                <GroupStyle>
                    <GroupStyle.HeaderTemplate>
                        <DataTemplate x:DataType="vm:GroupedWordList">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition MinWidth="150" />
                                    <ColumnDefinition MinWidth="100" />
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="{x:Bind Title}" HorizontalAlignment="Left" Foreground="{ThemeResource WordListGroupHeaderTextBrush}" FontWeight="SemiBold" FontSize="16"/>
                                <TextBlock Grid.Column="1" Text="{x:Bind Count}" HorizontalAlignment="Right" Foreground="{ThemeResource WordListGroupHeaderCountBrush}" FontSize="16"/>
                            </Grid>
                        </DataTemplate>
                    </GroupStyle.HeaderTemplate>
                </GroupStyle>
            </ListView.GroupStyle>
            <ListView.ItemTemplate>
                <DataTemplate x:DataType="vm:WordItem">
                    <TextBlock Text="{x:Bind Content}"/>
                </DataTemplate>
            </ListView.ItemTemplate>
            <ListView.ContextFlyout>
                <MenuFlyout >
                    <MenuFlyoutItem Command="{StaticResource CopyCommand}"/>
                </MenuFlyout>
            </ListView.ContextFlyout>
        </ListView>
    </Grid>
</Page>
