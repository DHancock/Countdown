<UserControl x:Class="Countdown.Views.ConundrumView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Countdown.Views"
             mc:Ignorable="d"
             d:DesignHeight="320" d:DesignWidth="500"
             DataContext="{Binding ConundrumViewModel}">
    <UserControl.Resources>

        <!-- text box style limiting input to uppercase Latin letters-->
        <Style TargetType="{x:Type local:CountdownTextBox}">
            <Setter Property="Margin" Value="2,3" />
            <Setter Property="MaxLength" Value="1" />
            <Setter Property="MinWidth" Value="23" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="AutoTabStyle" Value="AlwaysTab"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- a read only text box, simpler than styling a label -->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="2,3" />
            <Setter Property="MinWidth" Value="23" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="IsReadOnly" Value="True"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style>

        <DataTemplate x:Key="ConundrumCellTemplateStyle">
            <TextBlock Text="{Binding Conundrum}" HorizontalAlignment="Left" Padding="10,0,0,0" />
        </DataTemplate>

        <DataTemplate x:Key="SolutionCellTemplateStyle">
            <TextBlock Text="{Binding Solution}" HorizontalAlignment="Left" Padding="10,0,0,0" />
        </DataTemplate>

    </UserControl.Resources>

    <DockPanel Margin="5" LastChildFill="True">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource CommonTabPageLeftColumnWidth}"/>
            </Grid.ColumnDefinitions>

            <local:Clock Grid.Row="0" Width="100" Ticks="{Binding StopwatchController.Ticks}" HorizontalAlignment="Left" Margin="80,10,0,5" />

            <GroupBox Grid.Row="1" Header="Letters" Margin="5">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,10,0,7">
                    <local:CountdownTextBox Text="{Binding Conundrum_0, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_1, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_2, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_3, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_4, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_5, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_6, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_7, UpdateSourceTrigger=PropertyChanged}"/>
                    <local:CountdownTextBox Text="{Binding Conundrum_8, UpdateSourceTrigger=PropertyChanged}" AutoTabStyle="Off"/>
                </StackPanel>
            </GroupBox>

            <GroupBox Grid.Row="2" Header="Solution" Margin="5,0">
                <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="2,10,0,7">
                    <TextBox Text="{Binding Solution[0], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[1], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[2], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[3], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[4], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[5], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[6], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[7], Mode=OneWay}"/>
                    <TextBox Text="{Binding Solution[8], Mode=OneWay}"/>
                </StackPanel>
            </GroupBox>

            <Grid Grid.Row="3" Margin="5,20,5,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Button Grid.Column ="0" Content="_Choose" Command="{Binding ChooseCommand}" VerticalAlignment="Bottom" MinWidth="74"/>
                <Button Grid.Column ="1" Style="{StaticResource StartStopButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                <Button Grid.Column ="2" Content="_Solve" Command="{Binding SolveCommand}" IsDefault="True" VerticalAlignment="Bottom"/>
            </Grid>
        </Grid>

        <ListView Margin="5" ItemsSource="{Binding SolutionList}" SelectionMode="Extended" local:ScrollTo.Item="{Binding ScrollToItem}" Style="{StaticResource CommonListViewStyle}" ItemContainerStyle="{StaticResource CommonListViewItemContainerStyle}" UseLayoutRounding="True">
            <ListView.View>
                <GridView  AllowsColumnReorder="True" >
                    <GridViewColumn Header="Conundrum" Width="100" CellTemplate="{StaticResource ConundrumCellTemplateStyle}"/>
                    <GridViewColumn Header="Solution" Width="100" CellTemplate="{StaticResource SolutionCellTemplateStyle}"/>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <ContextMenu.InputBindings>
                        <KeyBinding Command="{Binding ListCopyCommand}" Modifiers="Control" Key="C" />
                        <KeyBinding CommandParameter="{StaticResource UrlEncodedLink}" Command="{Binding GoToDefinitionCommand}" Modifiers="Control" Key="L" />
                    </ContextMenu.InputBindings>
                    <StaticResource ResourceKey="CopyMenuItem"/>
                    <Separator />
                    <StaticResource ResourceKey="LinkMenuItem"/>
                    <Separator />
                    <MenuItem Header="Clear" Command="{Binding ClearCommand}" InputGestureText="DEL" >
                        <MenuItem.Icon>
                            <Path Data="M3,3 L13,13 M3,13 L13,3" Stroke="Black" StrokeThickness="1.5" Width="16" Height="16"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.InputBindings>
                <KeyBinding Command="{Binding ListCopyCommand}" Modifiers="Control" Key="C" />
                <KeyBinding CommandParameter="{StaticResource UrlEncodedLink}" Command="{Binding GoToDefinitionCommand}" Modifiers="Control" Key="L" />
                <KeyBinding Command="{Binding ClearCommand}" Key="Delete" />
            </ListView.InputBindings>
        </ListView>
    </DockPanel>
</UserControl>