<UserControl x:Class="Countdown.Views.NumbersView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:local="clr-namespace:Countdown.Views"
            mc:Ignorable="d" 
            d:DesignHeight="330" d:DesignWidth="500"
            DataContext="{Binding NumbersViewModel}">

    <UserControl.Resources>
        <!-- limit input to numbers -->
        <Style TargetType="local:CountdownTextBox">
            <Setter Property="ContentStyle" Value="Number" />
            <Setter Property="Margin" Value="3,0" />
            <Setter Property="MaxLength" Value="3" />
            <Setter Property="MinWidth" Value="35" />
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="TextAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <DockPanel Margin="5" LastChildFill="True">

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{StaticResource CommonTabPageLeftColumnWidth}" />
            </Grid.ColumnDefinitions>

            <local:Clock Grid.Row="0" Width="100" Ticks="{Binding StopwatchController.Ticks}" HorizontalAlignment="Left" Margin="80,10,0,5" />

            <GroupBox Grid.Row="1" Header="Tiles" Margin="5">
                <AdornerDecorator>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,10,0,7">
                        <local:CountdownTextBox Text="{Binding Tile_A, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        <local:CountdownTextBox Text="{Binding Tile_B, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        <local:CountdownTextBox Text="{Binding Tile_C, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        <local:CountdownTextBox Text="{Binding Tile_D, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        <local:CountdownTextBox Text="{Binding Tile_E, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                        <local:CountdownTextBox Text="{Binding Tile_F, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"/>
                    </StackPanel>
                </AdornerDecorator>
            </GroupBox>

            <GroupBox Grid.Row="2" Header="Target" Margin="5">
                <AdornerDecorator>
                    <local:CountdownTextBox Text="{Binding Target, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}" HorizontalAlignment="Center" MinWidth="40" Margin="0,7"/>
                </AdornerDecorator>
            </GroupBox>

            <Grid Grid.Row="3" Margin="5,25,5,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <local:ButtonPopup Grid.Column ="0" ItemsSource="{Binding TileOptionsList}" ChooseCommand="{Binding ChooseNumbersCommand}" SelectedIndex="{Binding TileOptionIndex, Mode=TwoWay}"/>
                <Button Grid.Column ="1" Style="{StaticResource StartStopButtonStyle}" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                <Button Grid.Column ="2" Content="_Solve" Command="{Binding SolveCommand}" IsDefault="True" VerticalAlignment="Bottom"/>
            </Grid>
        </Grid>

        <ListView Margin="5" ItemsSource="{Binding EquationList}" SelectionMode="Extended" ItemContainerStyle="{StaticResource CommonItemContainerStyle}" UseLayoutRounding="True" >
            <ListView.View>
                <GridView AllowsColumnReorder="false" >
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Width="220" DisplayMemberBinding="{Binding}"/>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <ContextMenu.InputBindings>
                        <KeyBinding Command="{Binding ListCopyCommand}" Modifiers="Control" Key="C" />
                    </ContextMenu.InputBindings>
                    <StaticResource ResourceKey="CopyMenuItem"/>
                </ContextMenu>
            </ListView.ContextMenu>
            <ListView.InputBindings>
                <KeyBinding Command="{Binding ListCopyCommand}" Modifiers="Control" Key="C" />
            </ListView.InputBindings>
        </ListView>
    </DockPanel>
</UserControl>
