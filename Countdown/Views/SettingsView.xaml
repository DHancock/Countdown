<UserControl x:Class="Countdown.Views.SettingsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Countdown.Views"
             mc:Ignorable="d"
             d:DesignHeight="320" d:DesignWidth="530"
             DataContext="{Binding SettingsViewModel}">
    <UserControl.Resources>

        <!-- text box that contain numbers and focus event handlers used to -->
        <!-- correct invalid values after the text box looses focus -->
        <Style TargetType="local:CountdownTextBox">
            <Setter Property="ContentStyle" Value="Number" />
            <Setter Property="Margin" Value="0,0" />
            <Setter Property="Padding" Value="0,0" />
            <Setter Property="MaxLength" Value="2" />
            <Setter Property="MinWidth" Value="20" />
            <EventSetter Event="LostFocus" Handler="FrequencyTextBox_LostFocus"/>
            <EventSetter Event="GotKeyboardFocus" Handler="FrequencyTextBox_GotKeyboardFocus"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip" Value="{Binding (Validation.Errors)[0].ErrorContent, RelativeSource={x:Static RelativeSource.Self}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- list view style that intercepts key events that other wise would be -->
        <!-- processed by the text boxes contained within the list -->
        <Style x:Key="SettingsListViewStyle" TargetType="ListView">
            <Setter Property="SelectionMode" Value="Single"/>
            <EventSetter Event="PreviewKeyDown" Handler="SettingsListPreviewKeyDown"/>
            <EventSetter Event="GotKeyboardFocus" Handler="SettingsListGotKeyboardFocus"/>
        </Style>
        
        <!-- selects the list item when the text box contained inside -->
        <!-- the list item gets focus -->
        <Style x:Key="SettingsListViewItemContainerStyle" TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListViewItem">
                        <Border CornerRadius="2" SnapsToDevicePixels="True" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontWeight" Value="Bold"/>
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocusWithin" Value="True">
                    <Setter Property="IsSelected" Value="True" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- sets cell text colour -->
        <DataTemplate x:Key="LetterCellTemplateStyle">
            <TextBlock Text="{Binding Letter}" HorizontalAlignment="Center" Foreground="MediumBlue"/>
        </DataTemplate>

        <!-- sets the cell contents to be a text box with a validation rule -->
        <!-- focuses the text box when its list item is selected -->
        <DataTemplate x:Key="FrequencyCellTemplateStyle">
            <local:CountdownTextBox x:Name="FrequencyTextBox" >
                <local:CountdownTextBox.Text>
                    <Binding Path="Frequency" UpdateSourceTrigger="PropertyChanged">
                        <Binding.ValidationRules>
                            <local:FrequencyValidationRule ValidationStep="RawProposedValue"/>
                        </Binding.ValidationRules>
                    </Binding>
                </local:CountdownTextBox.Text>
            </local:CountdownTextBox>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
                    <Setter TargetName="FrequencyTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=FrequencyTextBox}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <Style TargetType="GridViewColumnHeader">
            <Setter Property="Margin" Value="0,0,0,2" />
        </Style>
        
    </UserControl.Resources>

    
    <Grid Margin="5">

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ListView Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Margin="10,5,10,5" ItemsSource="{Binding VowelList}" Style="{StaticResource SettingsListViewStyle}" ItemContainerStyle="{StaticResource SettingsListViewItemContainerStyle}">

            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Vowel" Width="50" CellTemplate="{StaticResource LetterCellTemplateStyle}"/>
                    <GridViewColumn Header="Frequency" Width="75" CellTemplate="{StaticResource FrequencyCellTemplateStyle}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <Button Grid.Column="1" Grid.Row="1" Margin="0,0,5,5" Content="_Revert" Command="{Binding RevertVowelsCommand}" VerticalAlignment="Bottom"/>
        <Button Grid.Column="1" Grid.Row="2" Margin="0,0,5,5" Content="_Defaults" Command="{Binding DefaultVowelsCommand}" VerticalAlignment="Bottom"/>

        
        <ListView Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Margin="50,5,10,5" ItemsSource="{Binding ConsonantList}" Style="{StaticResource SettingsListViewStyle}" ItemContainerStyle="{StaticResource SettingsListViewItemContainerStyle}">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Letter" Width="50" CellTemplate="{StaticResource LetterCellTemplateStyle}"/>
                    <GridViewColumn Header="Frequency" Width="75" CellTemplate="{StaticResource FrequencyCellTemplateStyle}"/>
                </GridView>
            </ListView.View>
        </ListView>
        <Button Grid.Column="3" Grid.Row="1" Margin="0,0,5,5" Content="Re_vert" Command="{Binding RevertConsonantsCommand}" VerticalAlignment="Bottom"/>
        <Button Grid.Column="3" Grid.Row="2" Margin="0,0,5,5" Content="De_faults" Command="{Binding DefaultConsonantsCommand}" VerticalAlignment="Bottom"/>

    </Grid>
</UserControl>